// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Ride.Handlers.Models;

#nullable disable

namespace Ride.Handlers.Migrations
{
    [DbContext(typeof(SQLMigrationContext))]
    [Migration("20241125101455_RideIndex")]
    partial class RideIndex
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ride.Handlers.Models.Ride", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("DriverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Point>("DropoffLocation")
                        .HasColumnType("geography");

                    b.Property<string>("DropoffLocationGeoJSON")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime?>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<Point>("LastLocation")
                        .HasColumnType("geography");

                    b.Property<string>("LastLocationGeoJSON")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<Point>("PickupLocation")
                        .HasColumnType("geography");

                    b.Property<string>("PickupLocationGeoJSON")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DriverId", "Status", "RequestedAt" }, "IX_Rides_DriverId_Status_RequestedAt")
                        .IsDescending(false, false, true);

                    b.HasIndex(new[] { "Status", "UserId", "DriverId" }, "IX_Rides_Status_UserId_DriverId");

                    b.HasIndex(new[] { "UserId", "Status", "RequestedAt" }, "IX_Rides_UserId_Status_RequestedAt")
                        .IsDescending(false, false, true);

                    b.ToTable("Rides");
                });
#pragma warning restore 612, 618
        }
    }
}
